openapi: 3.0.3
servers:
    -   url: 'https://partners.visitme.hu/api/v2'
        description: Production server. C.O.R.S. not supported!
info:
    title: VisitMe API documentation
    description: The VisitMe.hu official API documentation
    version: 2.0.0
paths:
    /orders/view:
        get:
            summary: Get the details of the order
            parameters:
                -   $ref: '#/components/parameters/defaultRequestHeader'
                -   $ref: '#/components/parameters/authorizationRequestHeader'
                -   in: query
                    name: id
                    description: the number of the order
                    example: 2113
                    required: true
                    schema:
                        type: string
            responses:
                '404':
                    description: the order cannot be found
                '403':
                    description: if the secret key is incorrect or if the X-Visitme-Auth is repeated
                '405':
                    description: the method is not a GET method
                '500':
                    $ref: '#/components/responses/GeneralError'
                '200':
                    description: Returns the order details
                    content:
                        application/json:
                            schema:
                                type: object
                                description: the orders's data
                                properties:
                                    id:
                                        type: number
                                        description: user's unique identifier
                                        example: 2113
                                    partner_id:
                                        type: number
                                        description: the restaurant's unique id
                                        example: 380
                                    items:
                                        type: object
                                        description: the ordered items
                                        additionalProperties:
                                            $ref: "#/components/schemas/OrderItem"
                                    total:
                                        type: string
                                        format: number
                                        example: 1590
                                        description: final gross price (without delivery and packaging fee)
                                    discount:
                                        type: number
                                        example: 0
                                        description: "The discounts (requested from us by the restaurant) are not displayed in the discount field. This means that the automatically generated discounts (as the 10% discount on every drink) will not appear here. These are automatically deducted by us and the API already shows the deducted value.
                                            The discounts that must be activated (on every 2nd,3rd,etc. order, coupons, etc...) will appear and will have to be deducted from the total price."
                                    discount_type:
                                        type: string
                                        example: null
                                        nullable: true
                                        default: null
                                        enum: [ "counpon/online", "coupon/promotional", "xpromotion", "coupon/custom", null ]
                                        description: "coupon/online – the customer activated the coupon bought in exchange of vCoin in the coupon shop.

                                                coupon/promotional – promotional coupon defined by the restaurant. This is usually applied on the first order, but not exclusively.

                                                xpromotion – discounts can be provided on 2nd, 3rd, erc. order.

                                                coupon/custom – this is a customized coupon that only 1 customer can have and can be applied only 1x, for example, as a compensation for a delayed delivery."
                                    shipping:
                                        type: number
                                        default: 0
                                        example: 150
                                        nullable: false
                                        description: delivery fee
                                    packaging:
                                        type: number
                                        example: 450
                                        default: 0
                                        nullable: false
                                        description: the total packaging fee
                                    high_denomination:
                                        type: string
                                        example: no
                                        default: no
                                        enum: [ "no", "5000", "10000", "20000" ]
                                        description: high denomination
                                    payment_type:
                                        type: string
                                        example: cash
                                        default: cash
                                        enum: [ "cash", "card", "barion" ]
                                        description: the payment type
                                    firstname:
                                        type: string
                                        example: Attila
                                        description: the customer's first name
                                    lastname:
                                        type: string
                                        example: Bőr
                                        description: the customer's last name
                                    email:
                                        type: string
                                        format: email
                                        example: dev@visitme.hu
                                        description: customer's email
                                    phone:
                                        type: string
                                        description: the customer's phone number
                                        format: E.164
                                        example: +36702843497
                                    city_id:
                                        type: number
                                        description: customer's city_id
                                        example: 1
                                    district:
                                        type: number
                                        description: the number of the district
                                        nullable: true
                                        example: null
                                    street:
                                        type: string
                                        description: the customer's street name
                                    number:
                                        type: string
                                        description: the customer's street number's
                                    floor:
                                        type: string
                                        description: the customer's apartmen's floor
                                        nullable: true
                                    doorbell:
                                        type: string
                                        description: the customer's apartmen's doorbell
                                        nullable: true
                                    comment:
                                        type: string
                                        nullable: true
                                        description: the order's comment
                                        example: null
                                    status:
                                        type: number
                                        nullable: false
                                        description: the order's numeric status (0 unseen, 50 seen, 80-99 - cancelled, 100 - success)
                                    created:
                                        type: string
                                        format: ISO8601
                                        deprecated: false
                                        example: 1989-06-29T00:00:00+00:00
                                        description: the order's timestamp in UTC
                                    language:
                                        type: string
                                        example: en_GB
                                        description: customer's language what used at checkout
                                        enum: [ "en_GB", "hu_HU" ]
                                    is_green:
                                        type: boolean
                                        example: false
                                        description: no plastic clustery is required in the order if this is true
                                    full_address:
                                        type: string
                                        example: 4001 Debrecen, Egyetem tér 1
                                        description: "If the full_address is used, the geo is never null and shows the exact place of the delivery in lat and Ing format.
                                            The full_address is always a perfectly understandable address, but it doesn’t always contain a street address. For ex: Building of Life Sciences ('Élettudományi épület'), Debrecen."
                                    geo:
                                        type: object
                                        nullable: true
                                        example: {
                                            "lat": "57.002",
                                            "lng": "-0.19"
                                        }
                                        default: null
                                        description: the geo coordinates where the order must be delivered
                                    pickup_at:
                                        type: string
                                        format: ISO8601
                                        default: null
                                        nullable: true
                                        description: No delivery required, the customer will pick up the order from restaurant
                                    scheduled_at:
                                        type: string
                                        format: ISO8601
                                        default: null
                                        nullable: true
                                        description: the order must be delivered at this time
                                    contactless_delivery:
                                        type: boolean
                                        default: false
                                        nullable: true
                                        description: no contact between delivery guy and between the customer requested
                                    internal_id:
                                        type: string
                                        default: null
                                        nullable: true
                                        description: the order internal id generated only for this restaurant. this is not an unique id
                                    total_net:
                                        type: string
                                        format: number
                                        example: 1590
                                        description: final gross price (without delivery and packaging fee) (net)
                                    discount_net:
                                        type: number
                                        example: 0
                                        description: discount value (net)
                                    shipping_net:
                                        type: number
                                        default: 0
                                        example: 150
                                        nullable: false
                                        description: delivery fee (net)
                                    packaging_net:
                                        type: number
                                        example: 450
                                        default: 0
                                        nullable: false
                                        description: the total packaging fee (net)
                                    cash_handling_fee:
                                        type: number
                                        example: 100
                                        default: 0
                                        nullable: false
                                        description: the fee applied only when the payment method/type is cash
            tags:
                - Orders

    /orders/unseen:
        get:
            summary: Returns all of the unseen orders of the restaurant (more precisely, the orders that can be found in the order manager). If possible, we limit the requests to this endpoint. 1 request every 3-4 minute.
            parameters:
                -   $ref: '#/components/parameters/defaultRequestHeader'
                -   $ref: '#/components/parameters/authorizationRequestHeader'
                -   in: query
                    name: id
                    description: the unique identifier of the restaurant
                    example: 379
                    required: true
                    schema:
                        type: string
            responses:
                '404':
                    description: the order cannot be found
                '403':
                    description: if the secret key is incorrect or if the X-Visitme-Auth is repeated
                '405':
                    description: the method is not a GET method
                '500':
                    $ref: '#/components/responses/GeneralError'
                '200':
                    description: Returns the order details
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    success:
                                        type: boolean
                                        description: returns true if the operation was successfull otherwise false
                                    data:
                                        type: object
                                        description: the unseed orders id
                                        example: [968,234,678]
            tags:
                - Orders

    /orders/cancel:
        post:
            summary: Modifies the status of an order.
            parameters:
                -   $ref: '#/components/parameters/defaultRequestHeader'
                -   $ref: '#/components/parameters/authorizationRequestHeader'
            requestBody:
                content:
                    application/json:
                        schema:
                            type: object
                            required: [ id ]
                            properties:
                                id:
                                    type: number
                                    description: the unique if of the order
                                reason:
                                    type: string
                                    maxLength: 160
                                    description: If the order was cancelled, a reason can be provided
            responses:
                '404':
                    description: the order cannot be found
                '403':
                    description: if the secret key is incorrect or if the X-Visitme-Auth is repeated
                '405':
                    description: the method is not a GET method
                '500':
                    $ref: '#/components/responses/GeneralError'
                '200':
                    description: Returns the order details
                    content:
                        application/json:
                            schema:
                                type: object
                                description: the orders's data
                                properties:
                                    success:
                                        type: boolean
                                        description: returns true if the operation was successfull otherwise false
                                        example: true
                                    data:
                                        type: object
                                        description: not used
                                        example: []
            tags:
                - Orders

components:
    schemas:
        OrderItem:
            type: object
            description: One ordered item
            properties:
                id:
                    type: number
                    example: 35751
                    description: the unique identifier of the menu item
                sku:
                    type: string
                    example: 51BAC948-5BC9-4A02-9528-07658EA1747B
                    description: unique id of this variation in an external system
                name:
                    type: object
                    example:  {
                        "hu_HU": "Töltött Párizsi",
                        "en_GB": "Charged meat"
                    }
                    description: name of the menu item in every supported language
                price:
                    type: number
                    example: 795
                    description: the brut price
                price_net:
                    type: number
                    example: 757
                    description: the net price
                variation_id:
                    type: string
                    example: false
                    description: unique id of the variation. Please use sku instead
                    deprecated: true
                    nullable: true
                comment:
                    type: string
                    nullable: true
                    example: Please cut in half
                    deprecated: false
                    description: the comment added to the food
                extras:
                    type: object
                    additionalProperties:
                        description: unique id of the cart item
                        type: object
                        properties:
                            id:
                                type: number
                                description: the unique id of the menu extra item
                                example: 26045
                            sku:
                                type: string
                                example: PIZZAKETCUP
                                description: unique id of this variation in an external system
                            name:
                                type: object
                                example: {
                                    "hu_HU": "Töltött Párizsi extra 1",
                                    "en_GB": "Charged meat extra 1"
                                }
                                description: name of the menu extra item in every supported language
                            price:
                                type: number
                                description: price of the menu extra item (no discount should be applied here)
                                example: 0
                            price_net:
                                type: number
                                example: 0
                                description: the net price
                            removable:
                                type: boolean
                                example: false
                                description: this extra was required or not

                type:
                    type: string
                    description: type of the menu item
                    example: drink
                    deprecated: true
                quantity:
                    type: number
                    nullable: false
                    example: 1
                    description: quantity
                is_highlightable:
                    type: boolean
                    example: true
                    description: if this property is true then this menu item can appear in top10 section
    responses:
        GeneralMessageResponse:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/GeneralMessageResponse'
            description: General response. The data can contain an error/success message
        GeneralResponse:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/GeneralResponse'
            description: General response. The data can contain an array or a string with an error/success message
        GeneralError:
            description: General server error
        Unauthorized:
            description: Unauthorized. The user must be logged in to call this API endpoint
        MethodNotAllowed:
            description: Method not allowed. Invalid request method was performed on the endpoint.
    parameters:
        defaultRequestHeader:
            name: X-Requested-With
            in: header
            required: true
            description: Required parameter for backend
            schema:
                type: string
                default: XMLHttpRequest
        languageRequestHeader:
            name: Accept-Language
            in: header
            required: false
            description: The language of the request
            schema:
                type: string
                default: en_GB
                enum: [en_GB, hu_HU]
        authorizationRequestHeader:
            name: X-Visitme-Auth
            in: header
            required: true
            description: The unique API key token
            schema:
                type: string
                example: eccf0e42-0a75-11ea-8d71-362b9e155667
